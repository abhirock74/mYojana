[
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<p>Top eligible schemes depicted are only for the schemes for which rules have been created.</p>\n<div id=\"table\"></div>",
  "modified": "2024-03-01 12:32:47.180669",
  "name": "Top eligible schemes",
  "private": 0,
  "roles": [],
  "script": "const get_milestone_schemes = async() => {\n    return frappe.call({\n        method: \"myojana.api.top_schemes\",\n        callback:(r) => {\n            if (r.message) {\n                return r.message;\n            }\n        },\n    });\n}\n\nconst render_table = async()=>{\n    const response = await get_milestone_schemes()\n    let milestones = response.message;\n    console.log(\"milestones\",milestones)\n    let tblHead = `\n        <tr>\n            <th scope=\"col\"></th>\n            <th scope=\"col\">Scheme</th>\n            <th scope=\"col\"> Eligible Beneficiaries</th>\n        </tr>\n    `\n    let rows = [];\n    for(let milestone of milestones){\n        if(!milestone.schemes?.length){\n            continue;\n        }\n        rows.push(`\n            <tr class=\"h5 border-top border-left border-right border-bottom\">\n                <td style=\"text-align:center;\" colspan=\"3\">${milestone.name}</td>\n            </tr>\n        `)\n        \n        for(const [index, scheme] of milestone.schemes.entries()){\n            rows.push(`\n                <tr class=\"border-left border-right\">\n                    <td scope=\"col\">${(index +1)}</td>\n                    <td scope=\"col\"><a href=\"/app/scheme/${scheme.name}\">${scheme.name}</a></td>\n                    <td scope=\"col\">${scheme.ben_count}</td>\n                </tr>\n            `)  \n        }\n        rows.push(`\n            <tr class=\"h5 border-top\">\n                <td colspan=\"3\">\\n</td>\n            </tr>\n        `)\n    }\n    let table = `\n        <table class=\"table table-bordered\">\n            ${tblHead}\n            ${rows.join('\\n')}\n        </table>\n    `;\n    root_element.getElementById('table').innerHTML = table;\n    \n}\n\n\nrender_table()",
  "style": ".border-top{\n    border-top:2px solid #818181 !important;\n}\n.border-left{\n    border-left:2px solid #818181 !important;\n}\n.border-right{\n    border-right:2px solid #818181 !important;\n}\n.border-bottom{\n    border-bottom:2px solid #818181 !important;\n}\n"
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<button class=\"btn btn-sm print-btn text-mute\" onClick=\"window.print()\">Print in Pdf</button>",
  "modified": "2024-03-01 12:33:28.602897",
  "name": "print in pdf",
  "private": 0,
  "roles": [],
  "script": "",
  "style": ".print-btn{\n   background: #F3F3F3;\n    padding:4px 10px;\n    border:none;\n    font-size:13px;\n    float:right;\n}"
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<p> Beneficiaries schemes details</p>\n\n<div id=\"table\"></div>",
  "modified": "2024-05-07 16:54:22.740792",
  "name": "Beneficiaries scheme",
  "private": 0,
  "roles": [],
  "script": "\nfrappe.call({\n    method: \"myojana.sva_report.controllers.get_report_data.execute\",\n    args: { doc: \"Beneficiary Profiling\"},\n    callback: function(response) {\n        if (response.message) {\n            var data = response.message.data;\n            var columns = response.message.columns;\n\n            // Create table headers\n            var tableHeaders = columns.map(function(column) {\n                return `<th>${column.label}</th>`;\n            }).join('');\n\n            // Create table body\n            var tableRows = data.map(function(row) {\n                return \"<tr>\" + columns.map(function(column) {\n                    return \"<td>\" + row[column.fieldname] + \"</td>\";\n                }).join('') + \"</tr>\";\n            }).join('');\n\n            // Combine headers and rows to create the table\n            var table = `<table class=\"table\"><thead><tr>${tableHeaders}</tr></thead><tbody>${tableRows}</tbody></table>`;\n\n            // Append the generated table to the table element\n                root_element.getElementById('table').innerHTML = table;\n\n        } else {\n            console.error(\"No data returned from the API\");\n        }\n    }\n});\n\n",
  "style": "#table {\n    width: 100%;\n    border-collapse: collapse;\n}\n\n#table th {\n    background-color: #f2f2f2;\n}\n"
 }
]